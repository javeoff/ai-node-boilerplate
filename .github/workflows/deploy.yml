name: Deploy

permissions:
  contents: read
  packages: write
  actions: read
  deployments: write

on:
  workflow_run:
    workflows: ["Docker Publish"]
    types:
      - completed
  workflow_dispatch:

env:
  NODE_ENV: production
  CONTAINER_NAME: ai-node-boilerplate
  IMAGE_NAME: ghcr.io/javeoff/ai-node-boilerplate
  PORT: 3000

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Ansible and GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y ansible
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Login to GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create inventory file
        run: |
          mkdir -p ansible
          echo "[servers]" > ansible/inventory
          echo "server ansible_host=${{ secrets.SSH_HOST }} ansible_user=${{ secrets.SSH_USERNAME }}" >> ansible/inventory

      - name: Create Ansible playbook
        run: |
          cat > ansible/deploy.yml << 'EOF'
          ---
          - name: Deploy application
            hosts: servers
            become: yes
            vars:
              node_env: ${{ env.NODE_ENV }}
              container_name: ${{ env.CONTAINER_NAME }}
              image_name: ${{ env.IMAGE_NAME }}
              port: ${{ env.PORT }}
            tasks:
              - name: Install required system packages
                apt:
                  name:
                    - docker.io
                    - make
                  state: present
                  update_cache: yes

              - name: Create .env file
                shell: bash
                run: |
                  cat > /root/.env << EOL
                  # Environment variables from workflow
                  NODE_ENV={{ node_env }}
                  CONTAINER_NAME={{ container_name }}
                  IMAGE_NAME={{ image_name }}
                  PORT={{ port }}
                  
                  # GitHub secrets
                  GH_TOKEN=${{ secrets.GH_TOKEN }}
                  OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                  OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
                  NPM_TOKEN=${{ secrets.NPM_TOKEN }}
                  SSH_HOST=${{ secrets.SSH_HOST }}
                  SSH_USERNAME=${{ secrets.SSH_USERNAME }}
                  SSH_PRIVATE_KEY=${{ secrets.SSH_PRIVATE_KEY }}
                  TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
                  TELEGRAM_CI_ID=${{ secrets.TELEGRAM_CI_ID }}
                  EOL

              - name: Login to GitHub Container Registry
                docker_login:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

              - name: Pull Docker image
                docker_container:
                  name: "{{ container_name }}"
                  image: "{{ image_name }}:main"
                  state: started
                  restart: yes
                  pull: yes
                  env_file: /root/.env
                  ports:
                    - "{{ port }}:{{ port }}"
          EOF

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Run Ansible playbook
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ansible/inventory ansible/deploy.yml
